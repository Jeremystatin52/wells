"use strict";
var ATADUN_PATH = "/auth/static/prefs/atadun.js",
  isNative = isNative || !1,
  loginUrlBase = null,
  scriptParent = null,
  getUrl = window.location,
  upjsErrors = [];
function appendFIDOEligibleInputs() {
  var a = document.createElement("input"),
    b = document.createElement("input");
  a.type = "hidden";

  b.type = "hidden";
  PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(
    function (c) {
      a.value = c;
      b.value = c ? "platform" : "";
      document.querySelector('form[action*\x3d"auth/login/do"]') &&
        (document
          .querySelector('form[action*\x3d"auth/login/do"]')
          .appendChild(a),
        document
          .querySelector('form[action*\x3d"auth/login/do"]')
          .appendChild(b));
    }
  );
}
function disableSubmitsCollectUserPrefs(a) {
  for (var b = 0; b < a.elements.length; b++)
    if (null != a.elements[b].type) {
      var c = a.elements[b].name.toLowerCase();
      if (
        "submit" == a.elements[b].type ||
        ("button" == a.elements[b].type && -1 != c.indexOf("submit"))
      )
        a.elements[b].disabled = !0;
    }
  return addLoginFormFieldsAndSubmit(a);
}

function addExceptionsToForm(a) {
  if (0 < upjsErrors.length) {
    var b = document.createElement("input");
    b.type = "hidden";
    b.name = "logid";
    var secondAttempt = document.createElement("input");
    secondAttempt.type = "hidden";
    secondAttempt.name = "secondAttempt";
    for (var c = upjsErrors[0], d = 1; d < upjsErrors.length; d++)
      c = c + "," + upjsErrors[d];
    b.value = document.getElementById("logID").value;
    secondAttempt.value = document.getElementById("secondAttempt").value;
    a.appendChild(b);
    a.appendChild(secondAttempt);
  }
}
function addLoginFormFieldsAndSubmit(a) {
  try {
    base64EncodingforNDSPMD(a);
  } catch (b) {
    console.error(b), upjsErrors.push("submitUserPrefs");
  } finally {
    return jsEnabled(a), addExceptionsToForm(a), !0;
  }
}
function jsEnabled(a) {
  a && null != a && (a.jsenabled.value = "true");
  document.cookie =
    "https:" != window.location.protocol
      ? "CookiesAreEnabled\x3dyes; path\x3d/; domain\x3d./"
      : "CookiesAreEnabled\x3dyes; path\x3d/; domain\x3d./; Secure";
}
function addEvent(a, b, c) {
  return a.addEventListener
    ? (a.addEventListener(b, c, !1), !0)
    : a.attachEvent
    ? a.attachEvent("on" + b, c)
    : !1;
}

function addScriptElement(a, b) {
  var c = document.createElement("script");
  c.type = "text/javascript";
  c.id = a;
  c.src = b;
  c.rel = "preload";
  scriptParent.appendChild(c);
  return c;
}
function getCookie(a) {
  a += "\x3d";
  for (
    var b = decodeURIComponent(document.cookie).split(";"), c = 0;
    c < b.length;
    c++
  ) {
    for (var d = b[c]; " " == d.charAt(0); ) d = d.substring(1);
    if (0 == d.indexOf(a)) return d.substring(a.length, d.length);
  }
  return "";
}
function appendHiddenInput(a) {
  var b = document.createElement("input");
  b.type = "hidden";
  b.name = "c" + a.name;
  b.id = "c" + a.name;
  b.value = a.value;
  document.querySelector('form[action*\x3d"auth/login/do"]') &&
    document.querySelector('form[action*\x3d"auth/login/do"]').appendChild(b);
}
function addCookiesToForm(a) {
  a.forEach(function (a) {
    appendHiddenInput({ name: a, value: getCookie(a) });
  });
}
